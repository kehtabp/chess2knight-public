import{initMap,updateMapStyle,updateMarkers,invalidateMapSize,showMarkerPopup,setupLocationBanner}from"./map.js";import{initCalendar,updateEventDisplay,setCalendarToStartOfWeek,createPopupContent,getLocaleFirstDay}from"./calendar.js";let currentEvents=[],activeFilters=new Set(JSON.parse(localStorage.getItem("activeFilters"))||["tournament","casual","workshop","club"]),map=null,calendar=null,isMapExpanded=JSON.parse(localStorage.getItem("isMapExpanded"))||!1,globalResizeTimeout=null;function toggleFilter(e){activeFilters.has(e)?activeFilters.delete(e):activeFilters.add(e),localStorage.setItem("activeFilters",JSON.stringify([...activeFilters])),document.querySelectorAll(".filter-btn").forEach((e=>{e.classList.toggle("active",activeFilters.has(e.dataset.type))})),updateEventsDisplay()}function updateEventsDisplay(){const e=currentEvents.filter((e=>activeFilters.has(e.type)));console.log("Filtered events:",e),updateMarkers(e),updateEventDisplay(e)}function restoreMapState(){const e=document.getElementById("map-container"),t=document.getElementById("toggle-map");if(isMapExpanded){if(e.classList.add("expanded"),t.textContent="Expand calendar ▲▲▲",calendar){const e=new Date;calendar.changeView("dayGridWeek"),calendar.setOption("firstDay",e.getDay()),calendar.gotoDate(e)}setTimeout((()=>{invalidateMapSize()}),100)}else e.classList.remove("expanded"),t.textContent="Expand map ▼▼▼"}function toggleTheme(){const e=document.body.classList.toggle("dark-mode");document.documentElement.classList.toggle("dark-mode",e),localStorage.setItem("theme",e?"dark-mode":"light-mode"),updateMapStyle(e)}function toggleMap(){const e=document.getElementById("map-container"),t=document.getElementById("toggle-map");if(t.disabled)return;t.style.opacity="0.6",t.disabled=!0;let o=null;if(map&&(o=map.getBounds(),isMapExpanded?console.log("Captured bounds before collapsing map (to expand calendar):",o):console.log("Captured bounds before expanding map (to collapse calendar):",o)),e.classList.toggle("expanded"),isMapExpanded=e.classList.contains("expanded"),localStorage.setItem("isMapExpanded",JSON.stringify(isMapExpanded)),t.textContent=isMapExpanded?"Expand calendar ▲▲▲":"Expand map ▼▼▼",calendar){const e=window.innerWidth<=768;if(isMapExpanded){if(e)calendar.changeView("listWeek");else{const e=new Date;calendar.changeView("dayGridWeek"),calendar.setOption("firstDay",e.getDay())}calendar.gotoDate(new Date)}else e?calendar.changeView("listWeek"):(calendar.changeView("dayGridMonth"),calendar.setOption("firstDay",getLocaleFirstDay())),calendar.gotoDate(new Date)}setTimeout((()=>{invalidateMapSize(),calendar&&calendar.updateSize(),t.style.opacity="1",t.disabled=!1,o&&setTimeout((()=>{ensureMapBoundsVisible(o,isMapExpanded)}),200)}),250)}function ensureMapBoundsVisible(e,t){if(!map||!e)return void console.log("No map or previous bounds available");const o=map.getBounds();if(t){console.log("Map expanded, zooming IN to preserve bounds"),console.log("Previous bounds (from collapsed state):",e),console.log("Current bounds (after expansion):",o);if(o.contains(e.getNorthWest())&&o.contains(e.getSouthEast())){console.log("Current view too zoomed out, zooming IN to preserve bounds");const t=o.getNorth()-o.getSouth(),a=e.getNorth()-e.getSouth(),n=t/a;if(console.log("Current bounds height:",t),console.log("Previous bounds height:",a),console.log("Zoom in ratio needed:",n),n>1.2){const e=map.getZoom(),t=.8*Math.log2(n),o=Math.min(18,e+t);console.log("Current zoom:",e),console.log("Zooming in by:",t),console.log("New zoom:",o),map.setZoom(o)}else console.log("Bounds difference too small, no zoom adjustment")}else console.log("Previous bounds don't fit in current view, no adjustment needed")}else{console.log("Map collapsed, preserving previous bounds"),console.log("Previous bounds (from expanded state):",e),console.log("Current bounds (after collapse):",o);const t=o.contains(e.getNorthWest())&&o.contains(e.getSouthEast());console.log("Previous bounds contained in current bounds:",t),t?console.log("Previous bounds still visible, no adjustment needed"):(console.log("Previous bounds not fully visible, zooming out"),map.fitBounds(e,{padding:[10,10]}))}}function setupGlobalResizeHandler(){window.addEventListener("resize",(()=>{globalResizeTimeout&&clearTimeout(globalResizeTimeout),globalResizeTimeout=setTimeout((()=>{map&&invalidateMapSize(),calendar&&calendar.updateSize()}),200)}))}window.showMarkerPopup=showMarkerPopup,document.addEventListener("DOMContentLoaded",(async function(){try{if(void 0===window.FullCalendar)throw new Error("FullCalendar is not loaded. Please check your internet connection and try again.");const e=document.documentElement.classList.contains("dark-mode");document.body.classList.toggle("dark-mode",e);const t=JSON.parse(localStorage.getItem("activeFilters"));t&&(activeFilters=new Set(t)),document.querySelectorAll(".filter-btn").forEach((e=>{e.classList.toggle("active",activeFilters.has(e.dataset.type))})),document.getElementById("theme-toggle")?.addEventListener("click",toggleTheme),document.getElementById("toggle-map")?.addEventListener("click",toggleMap),document.querySelectorAll(".filter-btn").forEach((e=>{e.addEventListener("click",(()=>toggleFilter(e.dataset.type)))}));const o=await fetch("assets/events.json");if(!o.ok)throw new Error(`HTTP error! status: ${o.status}`);const a=await o.json();if(console.log("Loaded events:",a),currentEvents=a.map(((e,t)=>({...e,id:e.id||`event-${t}`}))),console.log("Initializing map..."),map=await initMap(),updateMapStyle(e),setupLocationBanner(),console.log("Initializing calendar..."),calendar=initCalendar(currentEvents),!calendar)throw new Error("Failed to initialize calendar");restoreMapState(),updateEventsDisplay(),setupGlobalResizeHandler()}catch(e){console.error("Error initializing app:",e);const t=document.getElementById("calendar");t&&(t.innerHTML=`<div class="error-message">Error: ${e.message}</div>`)}}));